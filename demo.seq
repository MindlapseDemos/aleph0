# demo sequencing and event file
# ------------------------------
# Any block except the root "demoseq" defines a demo event with the same name.
# Demo events can take arbitrary values as a function of time. Either by
# explicitly listing key values, or with start/end/wait/dur attributes.  Key
# times defined in nested events are relative to the parent event start time
# which is defined as the time of its first non-zero key.
#
# Times are in milliseconds. Values are expected to be 22.10 fixed point, so
# implicit keys defined by start attributes get a value of 1024.
#
# Attribute semantics:
#   - start: event interval start time, relative to parent.
#   - wait: interval start time, relative to the last encountered key time
#   - end: event interval end time, relative to parent.
#   - dur: event interval duration, pair with start or wait.
#   - key:<time>: defines explicit value for a specified time
#   - startabs: same as abs, but absolute time, not relative to parent
#   - endabs: same as end, but absolute time, not relative to parent
#   - keyabs:<abstime>: same as key, but absolute time, not relative to parent
#   - interp: one of <step|linear|smoothstep>
#   - trans: transition duration, 0 (default) means until the next key
#
#
# WARNING!!!!! WARNING!!!!! WARNING!!!!! WARNING!!!!! WARNING!!!!! WARNING!!!!!
# prev screen transition out + new screen transition in both run during the new
# screen's timeline. A 1sec screen after a screen with an 1sec trans-out won't
# show up at all! Take care when re-ordering parts or tweaking transition times.

demoseq {
	tunnel {
		start = 0
		dur = 0
		trans_in = 500
		trans_out = 250

		text {
			key:1000 = 1024	# mindlapse & desire solid
			key:2000 = 2048	# mindlapse & desire disperse
			key:4500 = 0
			key:5500 = 3072	# presents solid
			key:6500 = 4096	# presents disperse
			key:9000 = 0
		}
		accel { 
			wait = 1000
			dur = 1100
			wait = 0
			dur = 1100
			wait = 0
			dur = 1100
		}
	}

	blobgrid {
		wait = 0
		dur = 2000
	}

	metaballs {
		wait = 0
		dur = 2000

		faces {
			interp = "smoothstep"
			trans = 800
			key:1500 = 1024
		}
	}
}

# vi:ts=4 sts=4 sw=4 ai:
