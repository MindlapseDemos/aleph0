# demo sequencing and event file
# ------------------------------
# Any block except the root "demoseq" defines a demo event with the same name.
# Demo events can take arbitrary values as a function of time. Either by
# explicitly listing key values, or with start/end/wait/dur attributes.  Key
# times defined in nested events are relative to the parent event start time.
#
# Attribute semantics:
#   - start: event interval start time, relative to parent.
#   - startabs: same as start, but absolute time, not relative to parent.
#   - wait: interval start time, relative to the last encountered end time.
#   - dur: event interval duration.
#   - end: event interval end time, relative to parent.
#   - endabs: same as end, but absolute time, not relative to parent
#   - key(<msec>): explicit key/value, time in milliseconds relative to parent
#   - waitkey(<msec>): same as key, but relative to the last encountered end time
#   - keyabs(<msec>): same as key, but absolute time, not relative to parent
#   - ksec(<sec>): explicit key/value, time in seconds relative to parent
#   - waitksec(<sec>): same as ksec, but relative to the last encountered end time
#   - ksecabs(<sec>): same as ksec, but absolute time, not relative to parent
#   - interp: one of <step|linear|cubic|smoothstep>
#   - extrap: one of <extend|clamp|repeat|pingpong>
#   - trans_in/trans_out: auto-key in/out transition duration (milliseconds)
#   - trans: sets both trans_in and trans_out
#   - delayend <msec>: delay the end some time beyond the end of the last event
#
# WARNING!!!!! WARNING!!!!! WARNING!!!!! WARNING!!!!! WARNING!!!!! WARNING!!!!!
# prev screen transition out + new screen transition in both run during the new
# screen's timeline. A 1sec screen after a screen with an 1sec trans-out won't
# show up at all! Take care when re-ordering parts or tweaking transition times.

demoseq {
	tunnel {
		trans_in = 500
		trans_out = 250

		text {
			key(1000) = 1	# mindlapse & desire solid
			key(2000) = 2	# mindlapse & desire disperse
			key(4500) = 0
			key(5500) = 3	# presents solid
			key(6500) = 4	# presents disperse
			key(9000) = 0
		}
		accel {
			waitkey(1000) = 1
			waitkey(1) = 0
			waitkey(1100) = 1
			waitkey(1) = 0
			waitkey(1100) = 1
			waitkey(1100) = 0
		}
	}

	galaxyrise {
		dur = 7000
	}

	blobgrid {
		dur = 8000
	}

	hairball {
		dur = 15000
	}

	reactor {
		dur = 10000

		flash {
			wait = 9250
			dur = 750
		}
	}

	infcubes {
		dur = 8000
	}

	space {
		dur = 8000
	}

	hexfloor {
		#dur = 18000

		greet0 {
			wait = 2000
			dur = 2000
		}
		greet1 {
			wait = 1500
			dur = 2000
		}
		greet2 {
			wait = 1500
			dur = 2000
		}
		greet3 {
			wait = 1500
			dur = 2000
		}
		greet4 {
			wait = 1500
			dur = 2000
		}
		greet5 {
			wait = 1500
			dur = 2000
		}
		delayend = 4000
	}

	juliatunnel {
		dur = 9000
	}

	voxelscape {
		dur = 24576

		fade {
			interp = "linear"
			key(0) = 0
			key(2048) = 1
			interp = "linear"
			key(22528) = 1
			key(24576) = 0
		}

		flypath {
			interp = "linear"
			key(0) = 0
			key(24576) = 1
		}
	}

	polka {
		dur = 10000
	}

	bump {
		dur = 16384

		electroids {
			interp = "linear"
			key(0) = 0
			key(8192) = 64
		}

		scrollUp {
			wait = 0
			dur = 0
		}

		lightsIn {
			interp = "smoothstep"
			key(8) = 0
			key(4) = 1024
		}

		scalerIn {
			wait = 0
			dur = 8192
		}
	}

	metaballs {
		dur = 10000

		faces {
			interp = "smoothstep"
			key(0) = 0
			key(800) = 1
		}
	}

	molten {
		dur = 12000

		rise {
			interp = "smoothstep"
			key(0) = -1
			key(2000) = 1
		}
	}

	water {
		dur = 10000
	}

	credits {
		zoom {
			interp = "smoothstep"
			waitkey(0) = 30
			waitkey(1500) = 0
		}

		text {
			dur = 20000
		}

		fade {
			dur = 2000
		}
	}

	quit {
		dur = 1
	}
}

# vi:ts=4 sts=4 sw=4 ai:
